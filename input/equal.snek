(
    let ((x (tuple 1 2)) (y (tuple true true)))
    (
        block
        (print (= x y))
        (print (deep-equal x y))
        (set! y (tuple 1 2))
        (print (= x y))
        (print (deep-equal x y))
        (tuple-set! y 1 y)
        (print (deep-equal x y))
        (tuple-set! x 1 x)
        (print (deep-equal x y))
        (tuple-set! y 1 x)
        (print (deep-equal x y))
        (tuple-set! x 1 y)
        (print (deep-equal x y))
        (tuple-set! x 0 x)
        (print (deep-equal x y))
        (print x)
        (print y)
        (tuple-set! x 0 x)
        (tuple-set! x 1 x)
        (print x)
        (tuple-set! y 0 y)
        (tuple-set! y 1 y)
        (print (deep-equal x y))
    )
)